name: FAST API 

on:
  workflow_dispatch:
  push:
    branches:
      - master
    paths:
      - "api/**"

defaults:
  run:
    working-directory: api

env:
  STACK_NAME: fast-api
  LAMBDA_CONFIG_URI: LambdaConfigPython
  AWS_REGION: us-east-1
  ACCOUNT_ID: 390403883664
  SERVICE_ROLE: "lambda.amazonaws.com"
  LAMBDA_DESCRIPTION: "fast api"
  LAMBDA_NAME: FAST-API
  ECR_REPOSITORY_DEV: app-fastapi

jobs:
  dev:
    name: Environment Dev
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set Tag Number
        id: tag-number
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}
      - name: Check Tag Release
        env:
          RELEASE_VERSION: ${{ steps.tag-number.outputs.tag }}
        run: |
          echo $RELEASE_VERSION
          echo ${{ steps.vars.outputs.tag }}
      - name: Configure AWS credentials from dev account
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_CLOUD }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY_CLOUD }}
          aws-region: ${{ env.AWS_REGION }}
        
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
          ECR_REPOSITORY: ${{ env.ECR_REPOSITORY_DEV }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
          docker push -a $ECR_REGISTRY/$ECR_REPOSITORY
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"


      - name: Install dependencies and aws cdk
        working-directory: infra/
        run: |
          sudo npm install -g aws-cdk
          npm install

      - name: Deploy AWS Lambda
        working-directory: infra/
        run: |
          LAMBDA_CONFIG_URI=${{env.LAMBDA_CONFIG_URI}}
          STACK_NAME=${{env.STACK_NAME}}
          AWS_REGION=${{ env.AWS_REGION }}
          ACCOUNT_ID=${{ env.ACCOUNT_ID }}
          LAMBDA_NAME=${{env.LAMBDA_NAME}}
          SERVICE_ROLE=${{ env.SERVICE_ROLE }}
          LAMBDA=${{ env.LAMBDA }}
          LAMBDA_URI_IMAGE=${{ env.ECR_IMAGE_URI }}
          cdk deploy ${{ env.STACK_NAME }} -c config=${{ env.LAMBDA_CONFIG_URI }} --require-approval never
          aws lambda update-function-code --function-name ${{ env.LAMBDA_NAME }} --image-uri 390403883664.dkr.ecr.us-east-1.amazonaws.com/${{env.ECR_REPOSITORY_DEV}}:latest